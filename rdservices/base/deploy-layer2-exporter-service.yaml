apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: research-data-services.org
    app.kubernetes.io/instance: customerrds
    app.kubernetes.io/name: layer2-exporter-service
    app.kubernetes.io/part-of: service
    app.kubernetes.io/version: '1.0'
    research-data-services.org/layer: layer2
  name: layer2-exporter-service
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: research-data-services.org
      app.kubernetes.io/instance: customerrds
      app.kubernetes.io/name: layer2-exporter-service
      app.kubernetes.io/part-of: service
      app.kubernetes.io/version: '1.0'
      research-data-services.org/layer: layer2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: research-data-services.org
        app.kubernetes.io/instance: customerrds
        app.kubernetes.io/name: layer2-exporter-service
        app.kubernetes.io/part-of: service
        app.kubernetes.io/version: '1.0'
        research-data-services.org/layer: layer2
    spec:
      containers:
        - envFrom:
            - configMapRef:
                name: mservice
            - configMapRef:
                name: proxy
            - configMapRef:
                name: globalenvvar
            - configMapRef:
                name: serviceexporterconfig
          image: zivgitlab.wwu.io/sciebo-rds/sciebo-rds/use_case_exporter:v0.1.9
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: layer2-exporter-service
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
