---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-node
  namespace: redis
  labels:
    app: redis
spec:
  replicas: 3
  serviceName: rediscluster
  selector:
    matchLabels:
      app: redis
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      namespace: redis
    spec:
      storageClassName: openebs-jiva-3repl
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
  template:
    metadata:
      labels:
        app: redis
    spec:
      restartPolicy: Always
      volumes:
        - name: redis-config
          configMap:
            name: redis-configmap
            items:
              - key: "master.conf"
                path: "master.conf"
              - key: "slave.conf"
                path: "slave.conf"
      containers:
      - name: redis
        image: redis:4.0.9
        command: ["redis-server"]
        args: ["/etc/redis.conf"]
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        ports:
        - name: redis
          containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-data
          mountPath: /etc/
      initContainers:
      - name: init-redis
        image: redis:4.0.9
        command:
        - bash
        - "-c"
        - |
          set -ex
          # Generate mysql server-id from pod ordinal index.
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          # Copy appropriate conf.d files from config-map to emptyDir.
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/master.conf /etc/redis.conf
          else
            cp /mnt/config-map/slave.conf /etc/redis.conf
          fi
        volumeMounts:
        - name: redis-data
          mountPath: /etc
          subPath: redis.conf
        - name: redis-config
          mountPath: /mnt/config-map
