apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: customerrds
    app.kubernetes.io/name: redis-helper
  name: redis-helper-master
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: customerrds
      app.kubernetes.io/name: redis-helper
  serviceName: redis-helper-headless
  template:
    metadata:
      annotations:
        checksum/configmap: b42ba7447c922c90012ba0d77f5b6af82e24a5d9943b87ed549b1c75cca463c5
        checksum/health: c2637a86954c339e5a1714652974defdc5d594f41694f9b269d745245447150e
        checksum/scripts: f53d5b10612b25ab9f4f84f771365e42baf96b5f9286b1f185f6a57894e2588b
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: customerrds
        app.kubernetes.io/name: redis-helper
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: master
                    app.kubernetes.io/instance: customerrds
                    app.kubernetes.io/name: redis-helper
                namespaces:
                  - customerrds
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          command:
            - /bin/bash
          env:
            - name: BITNAMI_DEBUG
              value: 'false'
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: 'yes'
            - name: REDIS_TLS_ENABLED
              value: 'no'
            - name: REDIS_PORT
              value: '6379'
          image: docker.io/bitnami/redis:6.2.7-debian-11-r11
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 6
          name: redis
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 1
            failureThreshold: 5
            initialDelaySeconds: 20
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/bitnami/scripts/start-scripts
              name: start-scripts
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc/
              name: redis-tmp-conf
            - mountPath: /tmp
              name: tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: redis-helper
      serviceAccountName: redis-helper
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 493
            name: redis-helper-scripts
          name: start-scripts
        - configMap:
            defaultMode: 493
            name: redis-helper-health
          name: health
        - configMap:
            defaultMode: 420
            name: redis-helper-configuration
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
        - emptyDir: {}
          name: tmp
        - emptyDir: {}
          name: redis-data
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
